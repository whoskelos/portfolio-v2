---
export interface props {
    src: string;
    title: string;
    alt: string;
    url: string;
}

const { src, title, alt, url } = Astro.props;
---

<section id="wrapper" class="wrapper [perspective:1000px]">
    <article
        class="card w-[350px] md:w-[600px] p-4 shadow-2xl border-4 border-indigo-600/20 relative rounded-md mb-10"
    >
        <div class="card-img">
            <a href={url}>
                <img
                    class="w-full aspect-[72/35]"
                    src=`assets/img/${src}`
                    alt={alt}
                />
            </a>
        </div>
        <div
            class="absolute inset-0 w-full h-full bg-black/10 backdrop-saturate-20 backdrop-blur-sm -z-10"
        >
        </div>
    </article>
</section>

<style></style>

<script>
    const $ = (selector) => document.querySelector(selector);
    const $$ = (selector) => document.querySelectorAll(selector);
    const wrappers = $$(".wrapper");

    const cards = $$(".card");

    
    cards.forEach((card) => {
        wrappers.forEach((wrapper) => {
            const { width, height } = wrapper.getBoundingClientRect();
            const halfWidth = width / 2;
            const halfHeight = height / 2;
            wrapper.addEventListener("mousemove", (event) => {
                card.style.transition = "none";
                const { offsetX, offsetY } = event;
    
                const rotationX = ((offsetX - halfWidth) / halfWidth) * 10;
                const rotationY = ((offsetY - halfHeight) / halfHeight) * 10;
    
                card.style.transform = `rotateX(${rotationX}deg) rotateY(${rotationY}deg)`;
            });
    
            wrapper.addEventListener("mouseleave", () => {
                card.style.transition = `transform .5s ease-in-out`;
                card.style.transform = `rotateX(0deg) rotateY(0deg)`;
            });
        })
    });
</script>
